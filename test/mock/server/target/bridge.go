// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../../server/target/bridge.go

package mock_target

import (
	. "github.com/ghilbut/ygg.go/common"
	. "github.com/ghilbut/ygg.go/server/target"
	gomock "github.com/golang/mock/gomock"
)

// Mock of TargetBridge interface
type MockTargetBridge struct {
	ctrl     *gomock.Controller
	recorder *_MockTargetBridgeRecorder
}

// Recorder for MockTargetBridge (not exported)
type _MockTargetBridgeRecorder struct {
	mock *MockTargetBridge
}

func NewMockTargetBridge(ctrl *gomock.Controller) *MockTargetBridge {
	mock := &MockTargetBridge{ctrl: ctrl}
	mock.recorder = &_MockTargetBridgeRecorder{mock}
	return mock
}

func (_m *MockTargetBridge) EXPECT() *_MockTargetBridgeRecorder {
	return _m.recorder
}

func (_m *MockTargetBridge) Register(endpoint string) bool {
	ret := _m.ctrl.Call(_m, "Register", endpoint)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockTargetBridgeRecorder) Register(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Register", arg0)
}

func (_m *MockTargetBridge) Unregister(endpoint string) {
	_m.ctrl.Call(_m, "Unregister", endpoint)
}

func (_mr *_MockTargetBridgeRecorder) Unregister(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unregister", arg0)
}

// Mock of TargetBridgeDelegate interface
type MockTargetBridgeDelegate struct {
	ctrl     *gomock.Controller
	recorder *_MockTargetBridgeDelegateRecorder
}

// Recorder for MockTargetBridgeDelegate (not exported)
type _MockTargetBridgeDelegateRecorder struct {
	mock *MockTargetBridgeDelegate
}

func NewMockTargetBridgeDelegate(ctrl *gomock.Controller) *MockTargetBridgeDelegate {
	mock := &MockTargetBridgeDelegate{ctrl: ctrl}
	mock.recorder = &_MockTargetBridgeDelegateRecorder{mock}
	return mock
}

func (_m *MockTargetBridgeDelegate) EXPECT() *_MockTargetBridgeDelegateRecorder {
	return _m.recorder
}

func (_m *MockTargetBridgeDelegate) OnTargetBridgeStarted(bridge TargetBridge) {
	_m.ctrl.Call(_m, "OnTargetBridgeStarted", bridge)
}

func (_mr *_MockTargetBridgeDelegateRecorder) OnTargetBridgeStarted(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnTargetBridgeStarted", arg0)
}

func (_m *MockTargetBridgeDelegate) OnTargetBridgeStopped() {
	_m.ctrl.Call(_m, "OnTargetBridgeStopped")
}

func (_mr *_MockTargetBridgeDelegateRecorder) OnTargetBridgeStopped() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnTargetBridgeStopped")
}

func (_m *MockTargetBridgeDelegate) OnCtrlConnected(conn Connection) {
	_m.ctrl.Call(_m, "OnCtrlConnected", conn)
}

func (_mr *_MockTargetBridgeDelegateRecorder) OnCtrlConnected(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnCtrlConnected", arg0)
}

func (_m *MockTargetBridgeDelegate) OnTargetConnected(conn Connection) {
	_m.ctrl.Call(_m, "OnTargetConnected", conn)
}

func (_mr *_MockTargetBridgeDelegateRecorder) OnTargetConnected(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnTargetConnected", arg0)
}
