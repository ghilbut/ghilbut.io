// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../../common/ctrl/proxy.go

package mock_ctrl

import (
	. "github.com/ghilbut/ygg.go/common/ctrl"
	gomock "github.com/golang/mock/gomock"
)

// Mock of ProxyDelegate interface
type MockProxyDelegate struct {
	ctrl     *gomock.Controller
	recorder *_MockProxyDelegateRecorder
}

// Recorder for MockProxyDelegate (not exported)
type _MockProxyDelegateRecorder struct {
	mock *MockProxyDelegate
}

func NewMockProxyDelegate(ctrl *gomock.Controller) *MockProxyDelegate {
	mock := &MockProxyDelegate{ctrl: ctrl}
	mock.recorder = &_MockProxyDelegateRecorder{mock}
	return mock
}

func (_m *MockProxyDelegate) EXPECT() *_MockProxyDelegateRecorder {
	return _m.recorder
}

func (_m *MockProxyDelegate) OnText(proxy *Proxy, text string) {
	_m.ctrl.Call(_m, "OnText", proxy, text)
}

func (_mr *_MockProxyDelegateRecorder) OnText(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnText", arg0, arg1)
}

func (_m *MockProxyDelegate) OnBinary(proxy *Proxy, bytes []byte) {
	_m.ctrl.Call(_m, "OnBinary", proxy, bytes)
}

func (_mr *_MockProxyDelegateRecorder) OnBinary(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnBinary", arg0, arg1)
}

func (_m *MockProxyDelegate) OnClosed(proxy *Proxy) {
	_m.ctrl.Call(_m, "OnClosed", proxy)
}

func (_mr *_MockProxyDelegateRecorder) OnClosed(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnClosed", arg0)
}
