// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../../common/proxy.go

// package mock_common
package mock

import (
	. "github.com/ghilbut/ygg.go/common"
	gomock "github.com/golang/mock/gomock"
)

// Mock of CtrlProxyDelegate interface
type MockCtrlProxyDelegate struct {
	ctrl     *gomock.Controller
	recorder *_MockCtrlProxyDelegateRecorder
}

// Recorder for MockCtrlProxyDelegate (not exported)
type _MockCtrlProxyDelegateRecorder struct {
	mock *MockCtrlProxyDelegate
}

func NewMockCtrlProxyDelegate(ctrl *gomock.Controller) *MockCtrlProxyDelegate {
	mock := &MockCtrlProxyDelegate{ctrl: ctrl}
	mock.recorder = &_MockCtrlProxyDelegateRecorder{mock}
	return mock
}

func (_m *MockCtrlProxyDelegate) EXPECT() *_MockCtrlProxyDelegateRecorder {
	return _m.recorder
}

func (_m *MockCtrlProxyDelegate) OnText(proxy *CtrlProxy, text string) {
	_m.ctrl.Call(_m, "OnText", proxy, text)
}

func (_mr *_MockCtrlProxyDelegateRecorder) OnText(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnText", arg0, arg1)
}

func (_m *MockCtrlProxyDelegate) OnBinary(proxy *CtrlProxy, bytes []byte) {
	_m.ctrl.Call(_m, "OnBinary", proxy, bytes)
}

func (_mr *_MockCtrlProxyDelegateRecorder) OnBinary(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnBinary", arg0, arg1)
}

func (_m *MockCtrlProxyDelegate) OnClosed(proxy *CtrlProxy) {
	_m.ctrl.Call(_m, "OnClosed", proxy)
}

func (_mr *_MockCtrlProxyDelegateRecorder) OnClosed(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnClosed", arg0)
}

// Mock of TargetProxyDelegate interface
type MockTargetProxyDelegate struct {
	ctrl     *gomock.Controller
	recorder *_MockTargetProxyDelegateRecorder
}

// Recorder for MockTargetProxyDelegate (not exported)
type _MockTargetProxyDelegateRecorder struct {
	mock *MockTargetProxyDelegate
}

func NewMockTargetProxyDelegate(ctrl *gomock.Controller) *MockTargetProxyDelegate {
	mock := &MockTargetProxyDelegate{ctrl: ctrl}
	mock.recorder = &_MockTargetProxyDelegateRecorder{mock}
	return mock
}

func (_m *MockTargetProxyDelegate) EXPECT() *_MockTargetProxyDelegateRecorder {
	return _m.recorder
}

func (_m *MockTargetProxyDelegate) OnText(proxy *TargetProxy, text string) {
	_m.ctrl.Call(_m, "OnText", proxy, text)
}

func (_mr *_MockTargetProxyDelegateRecorder) OnText(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnText", arg0, arg1)
}

func (_m *MockTargetProxyDelegate) OnBinary(proxy *TargetProxy, bytes []byte) {
	_m.ctrl.Call(_m, "OnBinary", proxy, bytes)
}

func (_mr *_MockTargetProxyDelegateRecorder) OnBinary(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnBinary", arg0, arg1)
}

func (_m *MockTargetProxyDelegate) OnClosed(proxy *TargetProxy) {
	_m.ctrl.Call(_m, "OnClosed", proxy)
}

func (_mr *_MockTargetProxyDelegateRecorder) OnClosed(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnClosed", arg0)
}
