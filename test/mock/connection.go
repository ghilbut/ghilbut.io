// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../../common/connection.go

// package mock_common
package mock

import (
	. "github.com/ghilbut/ygg.go/common"
	gomock "github.com/golang/mock/gomock"
)

// Mock of ConnectionDelegate interface
type MockConnectionDelegate struct {
	ctrl     *gomock.Controller
	recorder *_MockConnectionDelegateRecorder
}

// Recorder for MockConnectionDelegate (not exported)
type _MockConnectionDelegateRecorder struct {
	mock *MockConnectionDelegate
}

func NewMockConnectionDelegate(ctrl *gomock.Controller) *MockConnectionDelegate {
	mock := &MockConnectionDelegate{ctrl: ctrl}
	mock.recorder = &_MockConnectionDelegateRecorder{mock}
	return mock
}

func (_m *MockConnectionDelegate) EXPECT() *_MockConnectionDelegateRecorder {
	return _m.recorder
}

func (_m *MockConnectionDelegate) OnText(conn *Connection, text string) {
	_m.ctrl.Call(_m, "OnText", conn, text)
}

func (_mr *_MockConnectionDelegateRecorder) OnText(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnText", arg0, arg1)
}

func (_m *MockConnectionDelegate) OnBinary(conn *Connection, bytes []byte) {
	_m.ctrl.Call(_m, "OnBinary", conn, bytes)
}

func (_mr *_MockConnectionDelegateRecorder) OnBinary(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnBinary", arg0, arg1)
}

func (_m *MockConnectionDelegate) OnClosed(conn *Connection) {
	_m.ctrl.Call(_m, "OnClosed", conn)
}

func (_mr *_MockConnectionDelegateRecorder) OnClosed(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnClosed", arg0)
}
